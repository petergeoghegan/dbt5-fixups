#!/bin/sh
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2006      Open Source Development Labs, Inc.
#               2006      Rilson Nascimento.
#               2006-2022 Mark Wong
#

MIXFILE=$1

if [ $# -ne 1 ]; then
	echo "usage: `basename $0` <ce_mix.log>"
	exit 1
fi

R --slave --no-save << __EOF__
mix <- read.csv("$MIXFILE", header=FALSE)

# Define column names for easier reference.
colnames(mix)[1] <- 'ctime'
colnames(mix)[2] <- 'txn'
colnames(mix)[3] <- 'status'
colnames(mix)[4] <- 'response'
colnames(mix)[5] <- 'id'

# Get the ctime of the last START marker and the last ctime to use as the end
# time
start <- max(mix\$ctime[mix\$txn == "START"])
end <- max(mix\$ctime)
rampup_start = min(mix\$ctime)

duration = end - start

# Needs to match the definitions in inc/CETxnMixGenerator.h.
sd <- 1
bv <- 2
cp <- 3
mw <- 4
ts <- 5
tl <- 6
to <- 7
tu <- 8
mf <- 9
tr <- 10
dm <- 11
tc <- 12

txn_name <- c("Security Detail", "Broker Volume", "Customer Position",
              "Market Watch", "Trade Status", "Trade Lookup", "Trade Order",
              "Trade Update", "Market Feed", "Trade Result",
              "Data Maintenance")

total_txn = sum(mix\$ctime >= start & mix\$txn != dm)

cat(sprintf("%39s\n", "Response Time"))
cat(sprintf("%37s\n", "(seconds)"))
cat(sprintf("%-17s       %% %s:%5s %% %7s %14s %7s %7s\n",
        "Transaction", "Average", "90th", "Total", "Rollbacks    %", "Warning",
        "Invalid"))
cat(paste("----------------- ------- --------------- ------- -------------- ",
          "------- -------\n", sep=""))

txn <- c(tr, bv, cp, mf, mw, sd, tl, to, ts, tu)
for (i in txn) {
    t_total <- sum(mix\$txn == i & mix\$ctime >= start)
    t_rollback <- sum(mix\$txn == i & mix\$status == 1 & mix\$ctime >= start,
                      na.rm=TRUE)
    t_invalid <- sum(mix\$txn == i & mix\$status < 0 & mix\$ctime >= start,
                     na.rm=TRUE)
    t_warning <- sum(mix\$txn == i & mix\$status > 2 & mix\$ctime >= start,
                     na.rm=TRUE)
    t_mean <- mean(mix\$response[mix\$txn == i & mix\$ctime >= start],
                   na.rm=TRUE)
    t_q90 <- quantile(mix\$response[mix\$txn == i & mix\$ctime >= start], .9,
                      na.rm=TRUE)
    cat(sprintf("%-17s %7.3f %7.3f:%7.3f %7d %6d %6.2f%% %7d %7d\n",
            txn_name[i],
            (t_total - t_rollback) / total_txn * 100.0,
            t_mean,
            t_q90,
            t_total,
            t_rollback,
            t_rollback / t_total * 100.0,
            t_warning,
            t_invalid))
}
cat(paste("----------------- ------- --------------- ------- -------------- ",
          "------- -------\n", sep=""))
cat(sprintf("%0.2f trade-result transactions per second (trtps)\n",
            (sum(mix\$txn == tr & mix\$ctime >= start) -
             sum(mix\$txn == tr & mix\$status == 1 & mix\$ctime >= start,
                 na.rm=TRUE)) / 60.0))
cat(sprintf("%0.1f minute(s) to ramp up\n", (start - rampup_start) / 60.0))
cat(sprintf("%0.1f minute steady state duration\n", duration / 60.0))
__EOF__
